package com.ebuilder.labmi.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wordnik.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlElement;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * Created by alz on 27-Aug-15.
 */
@DynamoDBTable(tableName = Animal.TABLE_NAME)
public class Animal implements Serializable {

    public final static String TABLE_NAME = "animals2";

    @NotNull
    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;

    public static final String ANIMAL_NAME_INDEX = "G_ANIMAL_NAME_INDEX";

    @NotNull
    @DynamoDBIndexHashKey(attributeName = "animal_name", globalSecondaryIndexName = ANIMAL_NAME_INDEX)
    @Size(min = 1, max = 100)
    private String animalName;

    @NotNull
    @DynamoDBAttribute(attributeName = "legs")
    private Integer animalLegs;

    @DynamoDBAttribute(attributeName = "colors")
    private List<String> color;

    @JsonProperty
    @ApiModelProperty(value = "Id", required = true)
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @JsonProperty
    @ApiModelProperty(value = "Animal name", required = true)
    public String getAnimalName() {
        return animalName;
    }

    public void setAnimalName(String animalName) {
        this.animalName = animalName;
    }

    @JsonProperty
    @ApiModelProperty(value = "Animal legs count", required = true)
    public Integer getAnimalLegs() {
        return animalLegs;
    }

    public void setAnimalLegs(Integer animalLegs) {
        this.animalLegs = animalLegs;
    }

    @JsonProperty
    @ApiModelProperty(value = "Animal colors", required = true)
    public List<String> getColor() {
        return color;
    }

    public void setColor(List<String> color) {
        this.color = color;
    }

    public Animal() {
    }

    public static class Builder {
        private Animal animal;

        private Builder(String name) {
            this.animal = new Animal();
            this.animal.setId(UUID.randomUUID().toString());
            this.animal.setAnimalName(name);
        }

        public static Builder of(String name) {
            return new Builder(name);
        }

        public Builder withId(String id) {
            this.animal.setId(id);
            return this;
        }

        public Builder withAnimalLegs(Integer numberOfLegs) {
            this.animal.setAnimalLegs(numberOfLegs);
            return this;
        }

        public Builder withAnimalColor(String color) {
            if (this.animal.getColor() == null) {
                this.animal.setColor(new ArrayList<String>());
            }
            this.animal.getColor().add(color);
            return this;
        }

        public Animal get() {
            return animal;
        }
    }
}
